# .github/workflows/ci.yml
name: Python Code Quality Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest # This runs on Linux in the cloud!
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pylint black bandit pip-audit pytest
          # Keep Linux commands here! This runs on the GitHub Runner.

      - name: Lint with flake8
        run: flake8 . # Linux command

      - name: Lint with pylint
        run: pylint my_module/ tests/ || true # Linux command

      # - name: Format check with black (Optional)
      #   run: black --check . # Linux command

      - name: Scan for security issues with bandit
        run: bandit -r . -ll # Linux command

      - name: Check for insecure dependencies with pip-audit
        run: |
          pip freeze > temp_requirements.txt
          pip-audit -r temp_requirements.txt
          rm temp_requirements.txt # Linux command (rm)
          # Keep Linux commands here!

      - name: Run tests with pytest
        run: |
          pytest tests/ --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml # Linux command

      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
        if: always()

  # SonarCloud job remains unchanged as it also runs on ubuntu-latest
  sonarcloud:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.2.0 # Use a specific version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}